#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SITE_pim.LINQtoSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EXCHANGE")]
	public partial class EXCHANGEDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertConta(Conta instance);
    partial void UpdateConta(Conta instance);
    partial void DeleteConta(Conta instance);
    partial void InsertMoeda(Moeda instance);
    partial void UpdateMoeda(Moeda instance);
    partial void DeleteMoeda(Moeda instance);
    partial void Insertmoeda_valor(moeda_valor instance);
    partial void Updatemoeda_valor(moeda_valor instance);
    partial void Deletemoeda_valor(moeda_valor instance);
    partial void InsertTipo_Usuario(Tipo_Usuario instance);
    partial void UpdateTipo_Usuario(Tipo_Usuario instance);
    partial void DeleteTipo_Usuario(Tipo_Usuario instance);
    partial void Inserttransacoes(transacoes instance);
    partial void Updatetransacoes(transacoes instance);
    partial void Deletetransacoes(transacoes instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public EXCHANGEDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EXCHANGEConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EXCHANGEDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EXCHANGEDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EXCHANGEDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EXCHANGEDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Conta> Conta
		{
			get
			{
				return this.GetTable<Conta>();
			}
		}
		
		public System.Data.Linq.Table<Moeda> Moeda
		{
			get
			{
				return this.GetTable<Moeda>();
			}
		}
		
		public System.Data.Linq.Table<moeda_valor> moeda_valor
		{
			get
			{
				return this.GetTable<moeda_valor>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Usuario> Tipo_Usuario
		{
			get
			{
				return this.GetTable<Tipo_Usuario>();
			}
		}
		
		public System.Data.Linq.Table<transacoes> transacoes
		{
			get
			{
				return this.GetTable<transacoes>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conta")]
	public partial class Conta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cod_conta;
		
		private decimal _conta_saldo;
		
		private int _id_usuario_fk;
		
		private int _id_moeda_fk;
		
		private EntityRef<Moeda> _Moeda;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncod_contaChanging(int value);
    partial void Oncod_contaChanged();
    partial void Onconta_saldoChanging(decimal value);
    partial void Onconta_saldoChanged();
    partial void Onid_usuario_fkChanging(int value);
    partial void Onid_usuario_fkChanged();
    partial void Onid_moeda_fkChanging(int value);
    partial void Onid_moeda_fkChanged();
    #endregion
		
		public Conta()
		{
			this._Moeda = default(EntityRef<Moeda>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_conta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cod_conta
		{
			get
			{
				return this._cod_conta;
			}
			set
			{
				if ((this._cod_conta != value))
				{
					this.Oncod_contaChanging(value);
					this.SendPropertyChanging();
					this._cod_conta = value;
					this.SendPropertyChanged("cod_conta");
					this.Oncod_contaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conta_saldo", DbType="Decimal(10,2) NOT NULL")]
		public decimal conta_saldo
		{
			get
			{
				return this._conta_saldo;
			}
			set
			{
				if ((this._conta_saldo != value))
				{
					this.Onconta_saldoChanging(value);
					this.SendPropertyChanging();
					this._conta_saldo = value;
					this.SendPropertyChanged("conta_saldo");
					this.Onconta_saldoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario_fk", DbType="Int NOT NULL")]
		public int id_usuario_fk
		{
			get
			{
				return this._id_usuario_fk;
			}
			set
			{
				if ((this._id_usuario_fk != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_usuario_fkChanging(value);
					this.SendPropertyChanging();
					this._id_usuario_fk = value;
					this.SendPropertyChanged("id_usuario_fk");
					this.Onid_usuario_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_moeda_fk", DbType="Int NOT NULL")]
		public int id_moeda_fk
		{
			get
			{
				return this._id_moeda_fk;
			}
			set
			{
				if ((this._id_moeda_fk != value))
				{
					if (this._Moeda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_moeda_fkChanging(value);
					this.SendPropertyChanging();
					this._id_moeda_fk = value;
					this.SendPropertyChanged("id_moeda_fk");
					this.Onid_moeda_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Moeda_Conta", Storage="_Moeda", ThisKey="id_moeda_fk", OtherKey="id_moeda", IsForeignKey=true)]
		public Moeda Moeda
		{
			get
			{
				return this._Moeda.Entity;
			}
			set
			{
				Moeda previousValue = this._Moeda.Entity;
				if (((previousValue != value) 
							|| (this._Moeda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Moeda.Entity = null;
						previousValue.Conta.Remove(this);
					}
					this._Moeda.Entity = value;
					if ((value != null))
					{
						value.Conta.Add(this);
						this._id_moeda_fk = value.id_moeda;
					}
					else
					{
						this._id_moeda_fk = default(int);
					}
					this.SendPropertyChanged("Moeda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Conta", Storage="_Usuario", ThisKey="id_usuario_fk", OtherKey="id_usuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Conta.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Conta.Add(this);
						this._id_usuario_fk = value.id_usuario;
					}
					else
					{
						this._id_usuario_fk = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Moeda")]
	public partial class Moeda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_moeda;
		
		private string _moeda_descricao;
		
		private string _moeda_tipo;
		
		private string _moeda_padrao;
		
		private EntitySet<Conta> _Conta;
		
		private EntitySet<moeda_valor> _moeda_valor;
		
		private EntitySet<transacoes> _transacoes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_moedaChanging(int value);
    partial void Onid_moedaChanged();
    partial void Onmoeda_descricaoChanging(string value);
    partial void Onmoeda_descricaoChanged();
    partial void Onmoeda_tipoChanging(string value);
    partial void Onmoeda_tipoChanged();
    partial void Onmoeda_padraoChanging(string value);
    partial void Onmoeda_padraoChanged();
    #endregion
		
		public Moeda()
		{
			this._Conta = new EntitySet<Conta>(new Action<Conta>(this.attach_Conta), new Action<Conta>(this.detach_Conta));
			this._moeda_valor = new EntitySet<moeda_valor>(new Action<moeda_valor>(this.attach_moeda_valor), new Action<moeda_valor>(this.detach_moeda_valor));
			this._transacoes = new EntitySet<transacoes>(new Action<transacoes>(this.attach_transacoes), new Action<transacoes>(this.detach_transacoes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_moeda", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_moeda
		{
			get
			{
				return this._id_moeda;
			}
			set
			{
				if ((this._id_moeda != value))
				{
					this.Onid_moedaChanging(value);
					this.SendPropertyChanging();
					this._id_moeda = value;
					this.SendPropertyChanged("id_moeda");
					this.Onid_moedaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moeda_descricao", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string moeda_descricao
		{
			get
			{
				return this._moeda_descricao;
			}
			set
			{
				if ((this._moeda_descricao != value))
				{
					this.Onmoeda_descricaoChanging(value);
					this.SendPropertyChanging();
					this._moeda_descricao = value;
					this.SendPropertyChanged("moeda_descricao");
					this.Onmoeda_descricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moeda_tipo", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string moeda_tipo
		{
			get
			{
				return this._moeda_tipo;
			}
			set
			{
				if ((this._moeda_tipo != value))
				{
					this.Onmoeda_tipoChanging(value);
					this.SendPropertyChanging();
					this._moeda_tipo = value;
					this.SendPropertyChanged("moeda_tipo");
					this.Onmoeda_tipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moeda_padrao", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string moeda_padrao
		{
			get
			{
				return this._moeda_padrao;
			}
			set
			{
				if ((this._moeda_padrao != value))
				{
					this.Onmoeda_padraoChanging(value);
					this.SendPropertyChanging();
					this._moeda_padrao = value;
					this.SendPropertyChanged("moeda_padrao");
					this.Onmoeda_padraoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Moeda_Conta", Storage="_Conta", ThisKey="id_moeda", OtherKey="id_moeda_fk")]
		public EntitySet<Conta> Conta
		{
			get
			{
				return this._Conta;
			}
			set
			{
				this._Conta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Moeda_moeda_valor", Storage="_moeda_valor", ThisKey="id_moeda", OtherKey="id_moeda_fk")]
		public EntitySet<moeda_valor> moeda_valor
		{
			get
			{
				return this._moeda_valor;
			}
			set
			{
				this._moeda_valor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Moeda_transacoes", Storage="_transacoes", ThisKey="id_moeda", OtherKey="id_moeda_fk")]
		public EntitySet<transacoes> transacoes
		{
			get
			{
				return this._transacoes;
			}
			set
			{
				this._transacoes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Conta(Conta entity)
		{
			this.SendPropertyChanging();
			entity.Moeda = this;
		}
		
		private void detach_Conta(Conta entity)
		{
			this.SendPropertyChanging();
			entity.Moeda = null;
		}
		
		private void attach_moeda_valor(moeda_valor entity)
		{
			this.SendPropertyChanging();
			entity.Moeda = this;
		}
		
		private void detach_moeda_valor(moeda_valor entity)
		{
			this.SendPropertyChanging();
			entity.Moeda = null;
		}
		
		private void attach_transacoes(transacoes entity)
		{
			this.SendPropertyChanging();
			entity.Moeda = this;
		}
		
		private void detach_transacoes(transacoes entity)
		{
			this.SendPropertyChanging();
			entity.Moeda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.moeda_valor")]
	public partial class moeda_valor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_moeda_valor;
		
		private System.DateTime _mv_dataHora;
		
		private decimal _mv_valor;
		
		private int _id_moeda_fk;
		
		private EntityRef<Moeda> _Moeda;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_moeda_valorChanging(int value);
    partial void Onid_moeda_valorChanged();
    partial void Onmv_dataHoraChanging(System.DateTime value);
    partial void Onmv_dataHoraChanged();
    partial void Onmv_valorChanging(decimal value);
    partial void Onmv_valorChanged();
    partial void Onid_moeda_fkChanging(int value);
    partial void Onid_moeda_fkChanged();
    #endregion
		
		public moeda_valor()
		{
			this._Moeda = default(EntityRef<Moeda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_moeda_valor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_moeda_valor
		{
			get
			{
				return this._id_moeda_valor;
			}
			set
			{
				if ((this._id_moeda_valor != value))
				{
					this.Onid_moeda_valorChanging(value);
					this.SendPropertyChanging();
					this._id_moeda_valor = value;
					this.SendPropertyChanged("id_moeda_valor");
					this.Onid_moeda_valorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mv_dataHora", DbType="DateTime NOT NULL")]
		public System.DateTime mv_dataHora
		{
			get
			{
				return this._mv_dataHora;
			}
			set
			{
				if ((this._mv_dataHora != value))
				{
					this.Onmv_dataHoraChanging(value);
					this.SendPropertyChanging();
					this._mv_dataHora = value;
					this.SendPropertyChanged("mv_dataHora");
					this.Onmv_dataHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mv_valor", DbType="Decimal(10,0) NOT NULL")]
		public decimal mv_valor
		{
			get
			{
				return this._mv_valor;
			}
			set
			{
				if ((this._mv_valor != value))
				{
					this.Onmv_valorChanging(value);
					this.SendPropertyChanging();
					this._mv_valor = value;
					this.SendPropertyChanged("mv_valor");
					this.Onmv_valorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_moeda_fk", DbType="Int NOT NULL")]
		public int id_moeda_fk
		{
			get
			{
				return this._id_moeda_fk;
			}
			set
			{
				if ((this._id_moeda_fk != value))
				{
					if (this._Moeda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_moeda_fkChanging(value);
					this.SendPropertyChanging();
					this._id_moeda_fk = value;
					this.SendPropertyChanged("id_moeda_fk");
					this.Onid_moeda_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Moeda_moeda_valor", Storage="_Moeda", ThisKey="id_moeda_fk", OtherKey="id_moeda", IsForeignKey=true)]
		public Moeda Moeda
		{
			get
			{
				return this._Moeda.Entity;
			}
			set
			{
				Moeda previousValue = this._Moeda.Entity;
				if (((previousValue != value) 
							|| (this._Moeda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Moeda.Entity = null;
						previousValue.moeda_valor.Remove(this);
					}
					this._Moeda.Entity = value;
					if ((value != null))
					{
						value.moeda_valor.Add(this);
						this._id_moeda_fk = value.id_moeda;
					}
					else
					{
						this._id_moeda_fk = default(int);
					}
					this.SendPropertyChanged("Moeda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Usuario")]
	public partial class Tipo_Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cod_tipoUsu;
		
		private string _descricao_tipoUsu;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncod_tipoUsuChanging(int value);
    partial void Oncod_tipoUsuChanged();
    partial void Ondescricao_tipoUsuChanging(string value);
    partial void Ondescricao_tipoUsuChanged();
    #endregion
		
		public Tipo_Usuario()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_tipoUsu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cod_tipoUsu
		{
			get
			{
				return this._cod_tipoUsu;
			}
			set
			{
				if ((this._cod_tipoUsu != value))
				{
					this.Oncod_tipoUsuChanging(value);
					this.SendPropertyChanging();
					this._cod_tipoUsu = value;
					this.SendPropertyChanged("cod_tipoUsu");
					this.Oncod_tipoUsuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao_tipoUsu", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string descricao_tipoUsu
		{
			get
			{
				return this._descricao_tipoUsu;
			}
			set
			{
				if ((this._descricao_tipoUsu != value))
				{
					this.Ondescricao_tipoUsuChanging(value);
					this.SendPropertyChanging();
					this._descricao_tipoUsu = value;
					this.SendPropertyChanged("descricao_tipoUsu");
					this.Ondescricao_tipoUsuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Usuario_Usuario", Storage="_Usuario", ThisKey="cod_tipoUsu", OtherKey="cod_tipoUsu_fk")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Usuario = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transacoes")]
	public partial class transacoes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_transacao;
		
		private System.DateTime _dt_transacao;
		
		private decimal _transacao_qtd;
		
		private string _tipo_transacao;
		
		private decimal _transacao_vlr_total;
		
		private string _transacao_status;
		
		private int _id_usuario_fk;
		
		private int _id_moeda_fk;
		
		private EntityRef<Moeda> _Moeda;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_transacaoChanging(int value);
    partial void Onid_transacaoChanged();
    partial void Ondt_transacaoChanging(System.DateTime value);
    partial void Ondt_transacaoChanged();
    partial void Ontransacao_qtdChanging(decimal value);
    partial void Ontransacao_qtdChanged();
    partial void Ontipo_transacaoChanging(string value);
    partial void Ontipo_transacaoChanged();
    partial void Ontransacao_vlr_totalChanging(decimal value);
    partial void Ontransacao_vlr_totalChanged();
    partial void Ontransacao_statusChanging(string value);
    partial void Ontransacao_statusChanged();
    partial void Onid_usuario_fkChanging(int value);
    partial void Onid_usuario_fkChanged();
    partial void Onid_moeda_fkChanging(int value);
    partial void Onid_moeda_fkChanged();
    #endregion
		
		public transacoes()
		{
			this._Moeda = default(EntityRef<Moeda>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_transacao", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_transacao
		{
			get
			{
				return this._id_transacao;
			}
			set
			{
				if ((this._id_transacao != value))
				{
					this.Onid_transacaoChanging(value);
					this.SendPropertyChanging();
					this._id_transacao = value;
					this.SendPropertyChanged("id_transacao");
					this.Onid_transacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_transacao", DbType="Date NOT NULL")]
		public System.DateTime dt_transacao
		{
			get
			{
				return this._dt_transacao;
			}
			set
			{
				if ((this._dt_transacao != value))
				{
					this.Ondt_transacaoChanging(value);
					this.SendPropertyChanging();
					this._dt_transacao = value;
					this.SendPropertyChanged("dt_transacao");
					this.Ondt_transacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transacao_qtd", DbType="Decimal(10,0) NOT NULL")]
		public decimal transacao_qtd
		{
			get
			{
				return this._transacao_qtd;
			}
			set
			{
				if ((this._transacao_qtd != value))
				{
					this.Ontransacao_qtdChanging(value);
					this.SendPropertyChanging();
					this._transacao_qtd = value;
					this.SendPropertyChanged("transacao_qtd");
					this.Ontransacao_qtdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo_transacao", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string tipo_transacao
		{
			get
			{
				return this._tipo_transacao;
			}
			set
			{
				if ((this._tipo_transacao != value))
				{
					this.Ontipo_transacaoChanging(value);
					this.SendPropertyChanging();
					this._tipo_transacao = value;
					this.SendPropertyChanged("tipo_transacao");
					this.Ontipo_transacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transacao_vlr_total", DbType="Decimal(10,0) NOT NULL")]
		public decimal transacao_vlr_total
		{
			get
			{
				return this._transacao_vlr_total;
			}
			set
			{
				if ((this._transacao_vlr_total != value))
				{
					this.Ontransacao_vlr_totalChanging(value);
					this.SendPropertyChanging();
					this._transacao_vlr_total = value;
					this.SendPropertyChanged("transacao_vlr_total");
					this.Ontransacao_vlr_totalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transacao_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string transacao_status
		{
			get
			{
				return this._transacao_status;
			}
			set
			{
				if ((this._transacao_status != value))
				{
					this.Ontransacao_statusChanging(value);
					this.SendPropertyChanging();
					this._transacao_status = value;
					this.SendPropertyChanged("transacao_status");
					this.Ontransacao_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario_fk", DbType="Int NOT NULL")]
		public int id_usuario_fk
		{
			get
			{
				return this._id_usuario_fk;
			}
			set
			{
				if ((this._id_usuario_fk != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_usuario_fkChanging(value);
					this.SendPropertyChanging();
					this._id_usuario_fk = value;
					this.SendPropertyChanged("id_usuario_fk");
					this.Onid_usuario_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_moeda_fk", DbType="Int NOT NULL")]
		public int id_moeda_fk
		{
			get
			{
				return this._id_moeda_fk;
			}
			set
			{
				if ((this._id_moeda_fk != value))
				{
					if (this._Moeda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_moeda_fkChanging(value);
					this.SendPropertyChanging();
					this._id_moeda_fk = value;
					this.SendPropertyChanged("id_moeda_fk");
					this.Onid_moeda_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Moeda_transacoes", Storage="_Moeda", ThisKey="id_moeda_fk", OtherKey="id_moeda", IsForeignKey=true)]
		public Moeda Moeda
		{
			get
			{
				return this._Moeda.Entity;
			}
			set
			{
				Moeda previousValue = this._Moeda.Entity;
				if (((previousValue != value) 
							|| (this._Moeda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Moeda.Entity = null;
						previousValue.transacoes.Remove(this);
					}
					this._Moeda.Entity = value;
					if ((value != null))
					{
						value.transacoes.Add(this);
						this._id_moeda_fk = value.id_moeda;
					}
					else
					{
						this._id_moeda_fk = default(int);
					}
					this.SendPropertyChanged("Moeda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_transacoes", Storage="_Usuario", ThisKey="id_usuario_fk", OtherKey="id_usuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.transacoes.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.transacoes.Add(this);
						this._id_usuario_fk = value.id_usuario;
					}
					else
					{
						this._id_usuario_fk = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_usuario;
		
		private string _usu_nome;
		
		private string _usu_email;
		
		private string _usu_senha;
		
		private string _tipo_num_doc;
		
		private string _usu_num_doc;
		
		private string _usu_telefone;
		
		private string _usu_celular;
		
		private string _usu_status;
		
		private string _usu_cep;
		
		private decimal _usu_num;
		
		private string _usu_comp;
		
		private int _cod_tipoUsu_fk;
		
		private EntitySet<Conta> _Conta;
		
		private EntitySet<transacoes> _transacoes;
		
		private EntityRef<Tipo_Usuario> _Tipo_Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_usuarioChanging(int value);
    partial void Onid_usuarioChanged();
    partial void Onusu_nomeChanging(string value);
    partial void Onusu_nomeChanged();
    partial void Onusu_emailChanging(string value);
    partial void Onusu_emailChanged();
    partial void Onusu_senhaChanging(string value);
    partial void Onusu_senhaChanged();
    partial void Ontipo_num_docChanging(string value);
    partial void Ontipo_num_docChanged();
    partial void Onusu_num_docChanging(string value);
    partial void Onusu_num_docChanged();
    partial void Onusu_telefoneChanging(string value);
    partial void Onusu_telefoneChanged();
    partial void Onusu_celularChanging(string value);
    partial void Onusu_celularChanged();
    partial void Onusu_statusChanging(string value);
    partial void Onusu_statusChanged();
    partial void Onusu_cepChanging(string value);
    partial void Onusu_cepChanged();
    partial void Onusu_numChanging(decimal value);
    partial void Onusu_numChanged();
    partial void Onusu_compChanging(string value);
    partial void Onusu_compChanged();
    partial void Oncod_tipoUsu_fkChanging(int value);
    partial void Oncod_tipoUsu_fkChanged();
    #endregion
		
		public Usuario()
		{
			this._Conta = new EntitySet<Conta>(new Action<Conta>(this.attach_Conta), new Action<Conta>(this.detach_Conta));
			this._transacoes = new EntitySet<transacoes>(new Action<transacoes>(this.attach_transacoes), new Action<transacoes>(this.detach_transacoes));
			this._Tipo_Usuario = default(EntityRef<Tipo_Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string usu_nome
		{
			get
			{
				return this._usu_nome;
			}
			set
			{
				if ((this._usu_nome != value))
				{
					this.Onusu_nomeChanging(value);
					this.SendPropertyChanging();
					this._usu_nome = value;
					this.SendPropertyChanged("usu_nome");
					this.Onusu_nomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string usu_email
		{
			get
			{
				return this._usu_email;
			}
			set
			{
				if ((this._usu_email != value))
				{
					this.Onusu_emailChanging(value);
					this.SendPropertyChanging();
					this._usu_email = value;
					this.SendPropertyChanged("usu_email");
					this.Onusu_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_senha", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string usu_senha
		{
			get
			{
				return this._usu_senha;
			}
			set
			{
				if ((this._usu_senha != value))
				{
					this.Onusu_senhaChanging(value);
					this.SendPropertyChanging();
					this._usu_senha = value;
					this.SendPropertyChanged("usu_senha");
					this.Onusu_senhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo_num_doc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tipo_num_doc
		{
			get
			{
				return this._tipo_num_doc;
			}
			set
			{
				if ((this._tipo_num_doc != value))
				{
					this.Ontipo_num_docChanging(value);
					this.SendPropertyChanging();
					this._tipo_num_doc = value;
					this.SendPropertyChanged("tipo_num_doc");
					this.Ontipo_num_docChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_num_doc", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string usu_num_doc
		{
			get
			{
				return this._usu_num_doc;
			}
			set
			{
				if ((this._usu_num_doc != value))
				{
					this.Onusu_num_docChanging(value);
					this.SendPropertyChanging();
					this._usu_num_doc = value;
					this.SendPropertyChanged("usu_num_doc");
					this.Onusu_num_docChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_telefone", DbType="VarChar(10)")]
		public string usu_telefone
		{
			get
			{
				return this._usu_telefone;
			}
			set
			{
				if ((this._usu_telefone != value))
				{
					this.Onusu_telefoneChanging(value);
					this.SendPropertyChanging();
					this._usu_telefone = value;
					this.SendPropertyChanged("usu_telefone");
					this.Onusu_telefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_celular", DbType="VarChar(11)")]
		public string usu_celular
		{
			get
			{
				return this._usu_celular;
			}
			set
			{
				if ((this._usu_celular != value))
				{
					this.Onusu_celularChanging(value);
					this.SendPropertyChanging();
					this._usu_celular = value;
					this.SendPropertyChanged("usu_celular");
					this.Onusu_celularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_status", DbType="VarChar(10)")]
		public string usu_status
		{
			get
			{
				return this._usu_status;
			}
			set
			{
				if ((this._usu_status != value))
				{
					this.Onusu_statusChanging(value);
					this.SendPropertyChanging();
					this._usu_status = value;
					this.SendPropertyChanged("usu_status");
					this.Onusu_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_cep", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string usu_cep
		{
			get
			{
				return this._usu_cep;
			}
			set
			{
				if ((this._usu_cep != value))
				{
					this.Onusu_cepChanging(value);
					this.SendPropertyChanging();
					this._usu_cep = value;
					this.SendPropertyChanged("usu_cep");
					this.Onusu_cepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_num", DbType="Decimal(6,0) NOT NULL")]
		public decimal usu_num
		{
			get
			{
				return this._usu_num;
			}
			set
			{
				if ((this._usu_num != value))
				{
					this.Onusu_numChanging(value);
					this.SendPropertyChanging();
					this._usu_num = value;
					this.SendPropertyChanged("usu_num");
					this.Onusu_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_comp", DbType="VarChar(50)")]
		public string usu_comp
		{
			get
			{
				return this._usu_comp;
			}
			set
			{
				if ((this._usu_comp != value))
				{
					this.Onusu_compChanging(value);
					this.SendPropertyChanging();
					this._usu_comp = value;
					this.SendPropertyChanged("usu_comp");
					this.Onusu_compChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_tipoUsu_fk", DbType="Int NOT NULL")]
		public int cod_tipoUsu_fk
		{
			get
			{
				return this._cod_tipoUsu_fk;
			}
			set
			{
				if ((this._cod_tipoUsu_fk != value))
				{
					if (this._Tipo_Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncod_tipoUsu_fkChanging(value);
					this.SendPropertyChanging();
					this._cod_tipoUsu_fk = value;
					this.SendPropertyChanged("cod_tipoUsu_fk");
					this.Oncod_tipoUsu_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Conta", Storage="_Conta", ThisKey="id_usuario", OtherKey="id_usuario_fk")]
		public EntitySet<Conta> Conta
		{
			get
			{
				return this._Conta;
			}
			set
			{
				this._Conta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_transacoes", Storage="_transacoes", ThisKey="id_usuario", OtherKey="id_usuario_fk")]
		public EntitySet<transacoes> transacoes
		{
			get
			{
				return this._transacoes;
			}
			set
			{
				this._transacoes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Usuario_Usuario", Storage="_Tipo_Usuario", ThisKey="cod_tipoUsu_fk", OtherKey="cod_tipoUsu", IsForeignKey=true)]
		public Tipo_Usuario Tipo_Usuario
		{
			get
			{
				return this._Tipo_Usuario.Entity;
			}
			set
			{
				Tipo_Usuario previousValue = this._Tipo_Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Usuario.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Tipo_Usuario.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._cod_tipoUsu_fk = value.cod_tipoUsu;
					}
					else
					{
						this._cod_tipoUsu_fk = default(int);
					}
					this.SendPropertyChanged("Tipo_Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Conta(Conta entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Conta(Conta entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_transacoes(transacoes entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_transacoes(transacoes entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
}
#pragma warning restore 1591
